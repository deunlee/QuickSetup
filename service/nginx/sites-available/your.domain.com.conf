server {
    listen 80;
    listen [::]:80;
    server_name your.domain.com;

    # Enable when using authentication for Certbot certificate renewal.
    # location /.well-known/acme-challenge/ {
    #     root /var/www/certbot;
    # }

    # Enable if you want to add a simple page that shows the visitor's IP.
    location = /ip {
        default_type text/html;
        return 200 "<!DOCTYPE html><html><head><meta name=\"robots\" content=\"noindex, nofollow, noarchive, nosnippet, noodp, noimageindex\" /><title>Your IP Address</title></head><body><h1>Your IP is<br>$remote_addr</h1></body></html>";
    }

    # Redirect to HTTPS.
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name your.domain.com;

    ssl_certificate      private/your.domain.com.pem;
    ssl_certificate_key  private/your.domain.com.key;
    # ssl_certificate     /etc/letsencrypt/live/your.domain.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/your.domain.com/privkey.pem;

    # Enable if you want to get the visitor's original IP when using Cloudflare.
    # include ./helper/cloudflare.conf;

    # Enable if you want to use a reverse proxy with service running on the host. (e.g. code-server)
    # If you don't know the host IP, extra_hosts configuration required in docker.
    # Because inside the container 127.0.0.1 doesn't mean the host.
    # location / {
    #     proxy_pass http://host.docker.internal:8080; # HTTP!
    #     proxy_set_header Host            $host;
    #     proxy_set_header X-Real-IP       $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Upgrade         $http_upgrade;
    #     proxy_set_header Connection      upgrade;
    #     proxy_set_header Accept-Encoding gzip;
    # }

    # Enable if you want to work with php-fpm.
    root  /var/www/html;
    index index.html index.htm index.php;
    location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        try_files     $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass  php:9000; # The IP of the php container is mapped to "php" by docker.
        fastcgi_index index.php;
        include       fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # Enable if you want to add page to view the current status of the NGINX.
    # (e.g. curl -k https://your.domain.com/nginx_status)
    # location /nginx_status {
    #     stub_status on;
    #     access_log  off;
    #     allow 10.0.0.0/8; # Only available on private networks.
    #     allow 172.16.0.0/12;
    #     allow 192.168.0.0/16;
    #     deny  all;
    # }
}
